#include<stdio.h>
#include<windows.h>
#include<time.h>
#include<conio.h>
#define SIZE 19

int map[SIZE][SIZE];
int command=1,length,sl_time=300,flag=1;
void init();
void get_command();
void move();
void draw();
void clear();



int main()
{
    init();
    while(flag==1){
        get_command();
        move();
        if(flag==1){
            draw();
        }
        Sleep(sl_time);

    }
}

void init()
{
    int i,j;

    //地图置为空白（0）
    for(i=0;i<SIZE;i++){
        for(j=0;j<SIZE;j++){
            map[i][j]=0;
        }
    }
    //上下围墙置为（-2），左右围墙置为（-3），四角置为（-4）
    for(i=0,j=0;j<SIZE;j++){
        map[i][j]=-2;
    }
    for(i=SIZE-1,j=0;j<SIZE;j++){
        map[i][j]=-2;
    }
    for(i=0,j=0;i<SIZE;i++){
        map[i][j]=-3;
    }
    for(i=0,j=SIZE-1;i<SIZE;i++){
        map[i][j]=-3;
    }
    map[0][0]=-4;
    map[0][SIZE-1]=-4;
    map[SIZE-1][0]=-4;
    map[SIZE-1][SIZE-1]=-4;
    //初始化长度为三的小蛇位置
    for(i=1,j=12;i<=3;i++){
        map[j][j-i]=i;
    }
    length=3;
    //生成第一个食物
    map[15][15]=-1;
}

void get_command()
{
    int tmp=-1;
    if(kbhit()){
        switch(getch())
        {
            case 'A':case 'a': tmp=3;break;
            case 'S':case 's': tmp=2;break;
            case 'D':case 'd': tmp=1;break;
            case 'W':case 'w': tmp=0;break;
        }
        if(tmp!=-1&&abs(command-tmp)!=2){
            command=tmp;
        }
    }
}

void move()
{
    int i,j,head_i,head_j;
    for(i=0;i<SIZE;i++){
        for(j=0;j<SIZE;j++){
            if(map[i][j]>=length){
               map[i][j]=0;
            }
            else if(map[i][j]>1){
                map[i][j]+=1;
            }
            else if(map[i][j]==1){
                map[i][j]=2;
                switch(command)
                {
                    case 3:head_i=i;head_j=j-1;break;//向左
                    case 2:head_i=i+1;head_j=j;break;//向下
                    case 1:head_i=i;head_j=j+1;break;//向右
                    case 0:head_i=i-1;head_j=j;break;//向上
                }
            }
        }
    }

    //判断头部即将到达的位置的情况
    if(map[head_i][head_j]==-1){//food
        length+=1;
        map[head_i][head_j]=1;
        // generate a new food
        while(1){
            srand(time(0));
            i=rand()%SIZE,j=(i*67)%SIZE;
            if(map[i][j]==0){
                map[i][j]=-1;
                break;
            }
        }
    }
    else if(head_i%(SIZE-1)==0||head_j%(SIZE-1)==0){//wall
        flag=0;
    }
    else if(map[head_i][head_j]>0){ // itself
        length=map[head_i][head_j];
        map[head_i][head_j]=1;
    }
    else { // nothing
        map[head_i][head_j]=1;
    }
}

void draw()
{
	int i, j;
	clear(); //清除屏幕
	for(i=0;i<SIZE;i++){
        for(j=0;j<SIZE;j++){
            if(map[i][j]>1){
                printf("●");
            }
            else if(map[i][j]==1){
                printf("○");
            }
            else if(map[i][j]==0){
                printf("  ");
            }
            else if(map[i][j]==-1){
                printf("★");
            }
            else if(map[i][j]==-2){// up down
                printf("--");
            }
            else if(map[i][j]==-3){// left right
                printf("| ");
            }
            else if(map[i][j]==-4){// angle
                printf("十");
            }
        }
        printf("\n");
	}
}
void clear()
{
	HANDLE handle=GetStdHandle(STD_OUTPUT_HANDLE);//获取标准输出设备句柄
	COORD coord; //定义光标位置结构体，其中包含x y坐标两个变量
	coord.X=0;   //x=0屏幕最上方
	coord.Y=0;   //y=0屏幕最左边
	SetConsoleCursorPosition(handle,coord);//将光标位置移至屏幕左上角
}
